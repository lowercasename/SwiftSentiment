name: CI
on:
  pull_request:
  push:
    tags:
      - "v*.*.*"

# Cancel active CI runs for a PR before starting another run
concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  FORCE_COLOR: "1"
  PYTHONIOENCODING: utf-8

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: Test and Package
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        target: [ "Windows-x64", "macOS-arm64", "macOS-x64" ]
        include:
          - target: "Windows-x64"
            output-format: "app"
            output-platform: "windows"
            runs-on: "windows-latest"

          # Apple Silicon
          - target: "macOS-arm64"
            output-format: "app"
            output-platform: "macOS"
            runs-on: "macos-14"

          # Apple Intel
          - target: "macOS-x64"
            output-format: "app"
            output-platform: "macOS"
            runs-on: "macos-13"

          # - target: "Ubuntu-24.04"
          #   platform: "Linux"
          #   output-format: "system"
          #   runs-on: "ubuntu-latest"
          #   pre-command: "sudo apt -y install socat"
          #   briefcase-run-prefix: "xvfb-run"
          #   briefcase-args: "--target ubuntu:24.04"

          # - target: "Fedora-40"
          #   platform: "Linux"
          #   output-format: "system"
          #   runs-on: "ubuntu-latest"
          #   pre-command: "sudo apt -y install socat"
          #   briefcase-run-prefix: "xvfb-run"
          #   briefcase-args: "--target fedora:40"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true # Necessary to download the model file(s)

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Briefcase
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install briefcase

      - name: Build App
        run: |
          ${{ matrix.briefcase-build-prefix }} \
          briefcase build \
            ${{ matrix.output-platform }} \
            ${{ matrix.output-format }} \
            --test --no-input --log \
            ${{ matrix.briefcase-args }} \
            ${{ matrix.briefcase-build-args }}

      # - name: Test App
      #   run: |
      #     ${{ matrix.briefcase-run-prefix }} \
      #     briefcase run \
      #       ${{ matrix.platform || matrix.target }} \
      #       ${{ matrix.output-format }} \
      #       --test --no-input --log \
      #       ${{ matrix.briefcase-args }} \
      #       ${{ matrix.briefcase-run-args }}

      - name: Package App
        run: |
          ${{ matrix.briefcase-package-prefix }} \
          briefcase package \
            ${{ matrix.output-platform }} \
            ${{ matrix.output-format }} \
            --update --adhoc-sign --no-input --log \
            ${{ matrix.briefcase-args }} \
            ${{ matrix.briefcase-package-args }}

      - name: Upload App
        # Briefcase cannot create iOS artefacts; instead, apps
        # must be packaged and published for iOS through Xcode.
        if: matrix.target != 'iOS'
        uses: actions/upload-artifact@v4
        with:
          name: SwiftSentiment-${{ github.ref_name }}-${{ matrix.target }}
          path: |
            dist/*${{ contains(matrix.target, 'Windows') && '.msi' || '.dmg' }}
          if-no-files-found: error

      - name: Upload Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Log-Failure-${{ matrix.target }}
          path: logs/*

  release:
    name: Create Release
    needs: ci
    runs-on: ubuntu-latest
    # Only run on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write  # Required for creating releases
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/SwiftSentiment-${{ github.ref_name }}-Windows-x64/**/*.msi
            artifacts/SwiftSentiment-${{ github.ref_name }}-macOS-arm64/**/*.dmg
            artifacts/SwiftSentiment-${{ github.ref_name }}-macOS-x64/**/*.dmg